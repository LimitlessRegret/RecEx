buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
		maven {
			name = "ossrh"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
		maven {
			name = "nifty-maven-repo.sourceforge.net"
			url = "http://nifty-gui.sourceforge.net/nifty-maven-repo"
		}
        maven {
            url "https://plugins.gradle.org/m2/"
		}
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT"
		classpath "de.undercouch:gradle-download-task:3.1.2"
		classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
    }
}

import de.undercouch.gradle.tasks.download.Download
apply plugin: 'forge'
apply plugin: 'eclipse'
apply plugin: 'com.github.johnrengelman.shadow'

eclipse {
	classpath {
		downloadJavadoc = true
		downloadSources = true
	}
}
eclipse.classpath.file.withXml {x ->
	def n = x.asNode()
	n.classpathentry.find {
		it.@kind == 'lib' && it.@path.contains('gregtech-5.09.33.17-dev')
	}.@sourcepath = 'libs/gregtech-5.09.33.17-src.zip'
}

version = "0.0.1"
group = "com.bigbass.recex"
archivesBaseName = "RecipeExporter"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

jar {
	finalizedBy shadowJar
	manifest {
		attributes 'Main-Class': 'com.bigbass.recex'
	}
}

shadowJar {
	configurations = [project.configurations.shadow]
	relocate 'ar.com.hjg.pngj', 'com.bigbass.recex.pngj'
	classifier ''
}

reobf {
	shadowJar {}
}

repositories {
	maven {
		name "Forge" // Applied Energistics
		url "http://files.minecraftforge.net/maven"
	}
	maven { // GalacticGreg, YAMCore,..
		name 'UsrvDE'
		url "http://jenkins.usrv.de:8082/nexus/content/repositories/releases/"
	}
	maven { // Baubles
		name 'UsrvDE_3rdParty'
		url "http://jenkins.usrv.de:8082/nexus/content/repositories/thirdparty/"
	}
	maven {
		name = "chickenbones"
		url = "http://chickenbones.net/maven/"
	}
	maven {
		name = "ic2, forestry"
		url = "http://maven.ic2.player.to/"
	}
	maven { // AppleCore
		url "http://www.ryanliptak.com/maven/"
	}
	maven {
		 name = "tterrag"
		 url = "http://maven.tterrag.com/"
	}
	maven { // WAILA
		name "Mobius Repo"
		url "http://mobiusstrip.eu/maven"
	}
	maven { // OpenComputers
		name "OpenComputers"
		url "http://maven.cil.li"
	}
}

dependencies {
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.138:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
	compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
	compile "net.sengir.forestry:forestry_1.7.10:4.2.9.57:dev"

	compile "com.google.code.gson:gson:2.7"
	shadow "ar.com.hjg:pngj:2.1.0"

	compile "javax.json:javax.json-api:1.0"
	compile "org.glassfish:javax.json:1.0.4"

	compile fileTree(dir: 'libs', include: '*.jar')
	compile fileTree(dir: 'libs', include: '*.zip')
}

task getGregTech(type: Download) {
    onlyIf {
        !file("libs/gregtech-5.09.33.17-dev.jar").exists()
    }
    src "http://jenkins.usrv.eu:8080/job/Gregtech-5-Unofficial/306/artifact/build/libs/gregtech-5.09.33.17-dev.jar"
    dest file("libs/gregtech-5.09.33.17-dev.jar")
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}

tasks.setupCIWorkspace.dependsOn getGregTech
tasks.setupDevWorkspace.dependsOn getGregTech
tasks.setupDecompWorkspace.dependsOn getGregTech
tasks.compileJava.dependsOn getGregTech

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
	
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
		
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
	
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
